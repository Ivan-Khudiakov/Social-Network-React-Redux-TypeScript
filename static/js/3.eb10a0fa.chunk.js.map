{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","hoc/WithAuthRedirect.tsx","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","style","avatar","src","photos","large","alt","Preloader","Post","s","item","posts","map","p","post","message","likes","id","maxLength","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","name","placeholder","validate","required","MyPosts","values","addPost","textForNewPost","MyPostsContainer","profilePage","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","React","compose","withRouter"],"mappings":"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","file":"static/js/3.eb10a0fa.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, {ComponentType} from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => {\r\n    return  {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T} />\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3ClB1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__38IqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__1ekqk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3XT0E\"};","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (status: string ) => void\r\n}\r\n\r\nexport const ProfileStatusWithHooks = (props: PropsType) => {\r\n    let [editMode, setEditMode] = useState (false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        //данный запрос необходим для сохранения нового статуса после деактивации\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"No status\"}</span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        value={status}/>\r\n\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n","import React from \"react\";\r\nimport {ProfileType} from \"../../../redux/profile-reducer\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport {Preloader} from \"../../../common/Preloader/Preloader\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\n\r\ntype PropsType = {\r\n    profile: null | ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileInfo = (props: PropsType) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <>\r\n            <img className={style.avatar} src={props.profile?.photos.large} alt={\"Avatar\"}/>\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        </>\r\n    )\r\n}\r\nexport default ProfileInfo","import React from \"react\";\r\nimport s from './Post.module.css'\r\nimport {PostType} from \"../MyPostContainer\";\r\n\r\n\r\n\r\ntype PostsPropsType = {\r\n    posts: Array<PostType>\r\n}\r\n\r\nconst Post = (props: PostsPropsType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            {\r\n                props.posts.map(p =>\r\n                    <div className={s.post} key={p.id}>\r\n                        <img src='https://lumpics.ru/wp-content/uploads/2017/11/Programmyi-dlya-sozdaniya-avatarok.png'\r\n                             alt='avatar'/>\r\n                        <span>{p.message}</span>\r\n                        <div>\r\n                            <span>{p.likes} like</span>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {PostType} from \"./MyPostContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\ntype MyPostPropsType = {\r\n    posts: Array<PostType>\r\n    addPost: (textForNewPost: string) => void\r\n    isAuth: boolean\r\n}\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\nconst AddPostForm = (props: any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={TextArea}\r\n                   name={'textForNewPost'}\r\n                   placeholder={'new Post'}\r\n                   validate={[required, maxLength]}/>\r\n            <button>Add post</button>\r\n        </form>\r\n    )\r\n}\r\nconst AddPostFormRedux = reduxForm({form: 'addPostForm'})(AddPostForm)\r\n\r\nconst MyPosts = (props: MyPostPropsType) => {\r\n    const addNewPost = (values: any) => {\r\n        props.addPost(values.textForNewPost)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n    return (\r\n        <div className={s.item}>\r\n            <h2>My posts</h2>\r\n            <AddPostFormRedux onSubmit={addNewPost}/>\r\n            <div>\r\n                New Post\r\n            </div>\r\n            <Post posts={props.posts}/>\r\n        </div>\r\n    )\r\n}\r\nexport default MyPosts;\r\n","import {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../redux/redux-store\";\r\n\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likes: number\r\n}\r\nexport type mapStateToPropsType = {\r\n    posts: Array<PostType>\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): mapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts)\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostContainer\";\r\nimport {ProfileType} from \"../../redux/profile-reducer\";\r\n\r\ntype PropsType = {\r\n    profile: null | ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst Profile = (props: PropsType) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;\r\n","import React, {ComponentType} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, ProfileType, updateStatus} from \"../../redux/profile-reducer\";\r\nimport { AppRootStateType } from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType = {\r\n    userId: string | undefined\r\n}\r\ntype MapStateToPropsType = {\r\n    profile: null | ProfileType\r\n    status: string\r\n    authorizedUserId: string | undefined\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    getProfile: (userId: string | undefined) => void\r\n    getStatus: (userId: string | undefined) => void\r\n    updateStatus: (status: string | undefined) => void\r\n}\r\ntype ProfilePagePropsType = MapStateToPropsType & MapDispatchToPropsType\r\ntype CommonPropsType = RouteComponentProps<PathParamsType> & ProfilePagePropsType\r\n\r\nclass ProfileContainer extends React.Component<CommonPropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootStateType): MapStateToPropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}), withRouter, withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}