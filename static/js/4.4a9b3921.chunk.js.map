{"version":3,"sources":["components/Dialogs/Dialogs.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","hoc/WithAuthRedirect.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/DialogMessage/DialogMessage.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","DialogItem","dialogsItems","map","d","className","s","dialog","exact","path","activeClassName","active","name","id","DialogMessage","dialogsMessages","m","message","text","maxLength","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","validate","required","placeholder","Dialogs","dialogs","dialogsPage","arrDialogsItems","arrDialogsMessages","values","addMessage","textForNewMessage","compose"],"mappings":"6EACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,QAAU,2B,8ECA9H,SAASC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDTM,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,E,gCERHW,EAAkB,SAACC,GACrB,MAAQ,CACJC,OAAQD,EAAME,KAAKD,SAIpB,SAASE,EAAoBC,GAQhC,OADiCC,YAAQN,EAARM,EANP,SAACC,GAA8B,IAChDL,EAAwBK,EAAxBL,OAAWM,EADoC,EACvBD,EADuB,YAEpD,OAAKL,EACE,cAACG,EAAD,eAAeG,IADF,cAAC,IAAD,CAAUC,GAAI,gB,6FCM3BC,EAdI,SAACH,GAChB,OACI,8BAEQA,EAAMI,aAAaC,KAAI,SAAAC,GAAC,OACpB,qBAAgBC,UAAWC,IAAEC,OAA7B,SACI,cAAC,IAAD,CAASC,OAAK,EAACR,GAAII,EAAEK,KAAMC,gBAAiBJ,IAAEK,OAA9C,SAAuDP,EAAEQ,QADnDR,EAAES,UCCjBC,EARO,SAAChB,GACnB,OACI,8BACKA,EAAMiB,gBAAgBZ,KAAI,SAAAa,GAAC,OAAI,qBAAgBX,UAAWC,IAAEW,QAA7B,SAAuCD,EAAEE,MAA/BF,EAAEH,U,kCCIlDM,EAAYC,YAAiB,IAgB7BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAdL,SAACxB,GACpB,OACI,uBAAM0B,SAAU1B,EAAM2B,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXhB,KAAM,oBACNiB,SAAU,CAACC,IAAUX,GACrBY,YAAa,sBACpB,8BACI,kDA2BDC,EAnBC,SAAClC,GAKb,OACI,sBAAKO,UAAWC,IAAE2B,QAAlB,UACI,qBAAK5B,UAAWC,IAAEJ,aAAlB,SACI,cAAC,EAAD,CAAYA,aAAcJ,EAAMoC,YAAYC,oBAEhD,qBAAK9B,UAAWC,IAAES,gBAAlB,SACI,cAAC,EAAD,CAAeA,gBAAiBjB,EAAMoC,YAAYE,uBAEtD,cAACf,EAAD,CAAqBG,SAZP,SAACa,GACnBvC,EAAMwC,WAAWD,EAAOE,0B,yBCLjBC,sBACX3C,aALkB,SAACL,GAAD,MAAiD,CACnE0C,YAAa1C,EAAM0C,eAIM,CAACI,iBAC1B3C,IAFW6C,CAGbR","file":"static/js/4.4a9b3921.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3-itn\",\"dialogsItems\":\"Dialogs_dialogsItems__1kDlm\",\"active\":\"Dialogs_active__3_6BJ\",\"message\":\"Dialogs_message__1MEYR\"};","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, {ComponentType} from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => {\r\n    return  {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T} />\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogItemsType} from \"../DialogsContainer\";\r\n\r\n\r\ntype DialogsItemsType = {\r\n    dialogsItems: Array<DialogItemsType>\r\n}\r\n\r\nconst DialogItem = (props: DialogsItemsType) => {\r\n    return (\r\n        <div>\r\n            {\r\n                props.dialogsItems.map(d =>\r\n                    <div key={d.id} className={s.dialog}>\r\n                        <NavLink exact to={d.path} activeClassName={s.active}>{d.name}</NavLink>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from \"react\";\r\nimport s from '../Dialogs.module.css'\r\nimport {DialogMessagesType} from \"../DialogsContainer\";\r\n\r\n\r\ntype DialogMessageType = {\r\n    dialogsMessages: Array<DialogMessagesType>\r\n}\r\nconst DialogMessage = (props: DialogMessageType) => {\r\n    return (\r\n        <div>\r\n            {props.dialogsMessages.map(m => <div key={m.id} className={s.message}>{m.text}</div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogMessage","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport DialogMessage from \"./DialogMessage/DialogMessage\";\r\nimport {DialogPageType} from \"./DialogsContainer\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\ntype DialogsPropsType = {\r\n    dialogsPage: DialogPageType\r\n    isAuth: boolean\r\n    addMessage: (textForNewMessage: string) => void\r\n}\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\nconst AddMessageForm = (props: any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={TextArea}\r\n                   name={'textForNewMessage'}\r\n                   validate={[required, maxLength]}\r\n                   placeholder={\"Enter you message\"}/>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n    const addNewMessage = (values: any) => {\r\n        props.addMessage(values.textForNewMessage)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                <DialogItem dialogsItems={props.dialogsPage.arrDialogsItems}/>\r\n            </div>\r\n            <div className={s.dialogsMessages}>\r\n                <DialogMessage dialogsMessages={props.dialogsPage.arrDialogsMessages}/>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import {addMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../redux/redux-store\";\r\nimport {ComponentType} from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nexport type DialogItemsType = {\r\n    id: number\r\n    path: string\r\n    name: string\r\n}\r\nexport type DialogMessagesType = {\r\n    id: number\r\n    text: string\r\n}\r\nexport type DialogPageType = {\r\n    arrDialogsItems: Array<DialogItemsType>\r\n    arrDialogsMessages: Array<DialogMessagesType>\r\n}\r\nexport type MapStatePropsType = {\r\n    dialogsPage: DialogPageType\r\n\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootStateType): MapStatePropsType => ({\r\n    dialogsPage: state.dialogsPage\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}